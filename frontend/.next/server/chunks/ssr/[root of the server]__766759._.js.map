{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///home/kagenou-sama/Dev/Calendar-Bot/frontend/src/app/components/Calendar.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { format, startOfMonth, endOfMonth, eachDayOfInterval, isSameMonth, isToday, startOfWeek, endOfWeek } from 'date-fns';\nimport { Event } from '../types/Event';\n\ninterface CalendarProps {\n    onDateSelect?: (date: Date) => void;\n    events: Event[];\n    selectedDate?: Date;\n}\n\nexport const Calendar: React.FC<CalendarProps> = ({ onDateSelect, events, selectedDate }) => {\n    const [currentDate, setCurrentDate] = useState(new Date());\n\n    const monthStart = startOfMonth(currentDate);\n    const monthEnd = endOfMonth(currentDate);\n    const calendarStart = startOfWeek(monthStart);\n    const calendarEnd = endOfWeek(monthEnd);\n    const daysInCalendar = eachDayOfInterval({ start: calendarStart, end: calendarEnd });\n\n    const handleDateClick = (date: Date) => {\n        onDateSelect?.(date);\n    };\n\n    const navigateMonth = (direction: 'prev' | 'next') => {\n        setCurrentDate(prev => {\n            const newDate = new Date(prev);\n            newDate.setMonth(prev.getMonth() + (direction === 'next' ? 1 : -1));\n            return newDate;\n        });\n    };\n\n    const getEventsForDate = (date: Date) => {\n        return events.filter(event =>\n            event.start.toDateString() === date.toDateString()\n        );\n    };\n\n    return (\n        <div className=\"w-full max-w-3xl mx-auto rounded-lg bg-[var(--tokyo-bg-lighter)] shadow-xl\">\n            <div className=\"flex justify-between items-center p-2 border-b border-[var(--tokyo-border)]\">\n                <button\n                    onClick={() => navigateMonth('prev')}\n                    className=\"p-1 text-[var(--tokyo-purple)] hover:bg-[var(--tokyo-purple)]/10 rounded-full transition-colors\"\n                >\n                    <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n                    </svg>\n                </button>\n                <h2 className=\"text-xl font-bold text-[var(--tokyo-cyan)]\">\n                    {format(currentDate, 'MMMM yyyy')}\n                </h2>\n                <button\n                    onClick={() => navigateMonth('next')}\n                    className=\"p-1 text-[var(--tokyo-purple)] hover:bg-[var(--tokyo-purple)]/10 rounded-full transition-colors\"\n                >\n                    <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                    </svg>\n                </button>\n            </div>\n\n            <div className=\"grid grid-cols-7\">\n                {['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(day => (\n                    <div key={day} className=\"text-center py-1 text-xs font-medium text-[var(--tokyo-purple)]\">\n                        {day}\n                    </div>\n                ))}\n\n                {daysInCalendar.map(date => {\n                    const dayEvents = getEventsForDate(date);\n                    return (\n                        <div\n                            key={date.toISOString()}\n                            onClick={() => handleDateClick(date)}\n                            className={`\n                                relative min-h-[80px] p-1 border-[0.5px] border-[var(--tokyo-border)]\n                                cursor-pointer transition-colors\n                                ${date.toDateString() === selectedDate?.toDateString() ? 'bg-[var(--tokyo-blue)]/10' : ''}\n                                ${!isSameMonth(date, currentDate) ? 'text-[var(--tokyo-fg)]/40' : ''}\n                                hover:bg-[var(--tokyo-purple)]/5\n                            `}\n                        >\n                            <span className={`\n                                inline-flex w-5 h-5 items-center justify-center rounded-full text-xs\n                                ${date.toDateString() === selectedDate?.toDateString() ? 'bg-[var(--tokyo-blue)] text-white' : ''}\n                            `}>\n                                {format(date, 'd')}\n                            </span>\n\n                            <div className=\"mt-1 space-y-0.5 overflow-hidden\">\n                                {dayEvents.slice(0, 3).map((event, index) => (\n                                    <div\n                                        key={event.id}\n                                        className=\"text-[10px] truncate px-1 py-0.5 rounded\"\n                                        style={{\n                                            backgroundColor: `${event.color}20`,\n                                            borderLeft: `2px solid ${event.color}`\n                                        }}\n                                    >\n                                        {format(event.start, 'HH:mm')} {event.title}\n                                    </div>\n                                ))}\n                                {dayEvents.length > 3 && (\n                                    <div className=\"text-[10px] text-[var(--tokyo-fg)]/60 pl-1\">\n                                        +{dayEvents.length - 3} more\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n                    );\n                })}\n            </div>\n        </div>\n    );\n}; "],"names":[],"mappings":"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"}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 234, "column": 0}, "map": {"version":3,"sources":["file:///home/kagenou-sama/Dev/Calendar-Bot/frontend/src/app/components/CalendarEventCard.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { format, differenceInMinutes } from 'date-fns';\nimport { Event } from '../types/Event';\n\ninterface CalendarEventCardProps {\n    event: Event;\n    onUpdate?: (event: Event) => void;\n    onDelete?: (event: Event) => void;\n}\n\nexport const CalendarEventCard: React.FC<CalendarEventCardProps> = ({ event, onUpdate, onDelete }) => {\n    const { title, start, end, color = 'var(--tokyo-blue)' } = event;\n    const [isViewingDetails, setIsViewingDetails] = useState(false);\n    const [isEditing, setIsEditing] = useState(false);\n    const [editedEvent, setEditedEvent] = useState(event);\n    const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\n\n    const calculateEventHeight = () => {\n        const durationInMinutes = differenceInMinutes(end, start);\n        return (durationInMinutes / 15) * 15; // 15px per 15 minutes\n    };\n\n    const handleSave = () => {\n        onUpdate?.(editedEvent);\n        setIsEditing(false);\n        setIsViewingDetails(false);\n    };\n\n    return (\n        <>\n            <div\n                onClick={(e) => {\n                    e.stopPropagation();\n                    setIsViewingDetails(true);\n                }}\n                className=\"group relative p-1 rounded cursor-pointer transition-all h-full\n                    bg-[var(--tokyo-bg)] hover:bg-[var(--tokyo-bg)]/80 border border-[var(--tokyo-border)]\"\n                style={{\n                    borderLeft: `4px solid ${color}`,\n                    height: `${calculateEventHeight()}px`\n                }}\n            >\n                <h3 className=\"font-bold text-[var(--tokyo-cyan)] truncate text-xs mb-0.5\">{title}</h3>\n                <div className=\"flex items-center gap-1 text-xs text-[var(--tokyo-purple)]\">\n                    <span>{format(start, 'h:mm a')}</span>\n                    {calculateEventHeight() > 30 && (\n                        <>\n                            <span>-</span>\n                            <span>{format(end, 'h:mm a')}</span>\n                        </>\n                    )}\n                </div>\n            </div>\n\n            {/* Details Modal */}\n            {isViewingDetails && !isEditing && (\n                <div\n                    className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50\"\n                    onClick={(e) => {\n                        if (e.target === e.currentTarget) {\n                            setIsViewingDetails(false);\n                        }\n                    }}\n                >\n                    <div className=\"bg-[var(--tokyo-bg-lighter)] p-6 rounded-lg shadow-xl w-96\" onClick={e => e.stopPropagation()}>\n                        <div className=\"flex justify-between items-center mb-4\">\n                            <h3 className=\"text-xl font-bold text-[var(--tokyo-cyan)]\">\n                                Event Details\n                            </h3>\n                            <div className=\"flex items-center gap-2\">\n                                <button\n                                    onClick={() => {\n                                        setEditedEvent(event);\n                                        setIsEditing(true);\n                                    }}\n                                    className=\"p-1 text-[var(--tokyo-cyan)] hover:bg-[var(--tokyo-cyan)]/10 rounded-full transition-colors\"\n                                    title=\"Edit Event\"\n                                >\n                                    <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                                    </svg>\n                                </button>\n                                <button\n                                    onClick={() => setShowDeleteConfirm(true)}\n                                    className=\"p-1 text-[var(--tokyo-red)] hover:bg-[var(--tokyo-red)]/10 rounded-full transition-colors\"\n                                    title=\"Delete Event\"\n                                >\n                                    <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                                    </svg>\n                                </button>\n                                <button\n                                    onClick={() => setIsViewingDetails(false)}\n                                    className=\"p-1 text-[var(--tokyo-purple)] hover:bg-[var(--tokyo-purple)]/10 rounded-full transition-colors\"\n                                    title=\"Close\"\n                                >\n                                    <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                                    </svg>\n                                </button>\n                            </div>\n                        </div>\n\n                        <div className=\"space-y-4\">\n                            <div>\n                                <h4 className=\"text-lg font-bold text-[var(--tokyo-cyan)] mb-1\">{title}</h4>\n                                <div className=\"text-sm text-[var(--tokyo-purple)]\">\n                                    {format(start, 'h:mm a')} - {format(end, 'h:mm a')}\n                                </div>\n                            </div>\n\n                            {event.description && (\n                                <div className=\"text-[var(--tokyo-fg)] text-sm\">\n                                    {event.description}\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                </div>\n            )}\n\n            {/* Edit Modal */}\n            {isEditing && (\n                <div\n                    className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50\"\n                    onClick={(e) => {\n                        if (e.target === e.currentTarget) {\n                            setIsEditing(false);\n                            setEditedEvent(event);\n                        }\n                    }}\n                >\n                    <div className=\"bg-[var(--tokyo-bg-lighter)] p-6 rounded-lg shadow-xl w-96\" onClick={e => e.stopPropagation()}>\n                        <div className=\"flex justify-between items-center mb-4\">\n                            <h3 className=\"text-xl font-bold text-[var(--tokyo-cyan)]\">\n                                Edit Event\n                            </h3>\n                            <button\n                                onClick={() => {\n                                    setIsEditing(false);\n                                    setEditedEvent(event);\n                                }}\n                                className=\"p-1 text-[var(--tokyo-purple)] hover:bg-[var(--tokyo-purple)]/10 rounded-full transition-colors\"\n                            >\n                                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                                </svg>\n                            </button>\n                        </div>\n\n                        <input\n                            type=\"text\"\n                            value={editedEvent.title}\n                            onChange={(e) => setEditedEvent(prev => ({ ...prev, title: e.target.value }))}\n                            className=\"w-full mb-4 p-2 rounded bg-[var(--tokyo-bg)] text-[var(--tokyo-fg)] border border-[var(--tokyo-border)]\"\n                        />\n\n                        <div className=\"grid grid-cols-2 gap-4 mb-4\">\n                            <div>\n                                <label className=\"block text-sm text-[var(--tokyo-purple)] mb-1\">Start Time</label>\n                                <input\n                                    type=\"time\"\n                                    value={format(editedEvent.start, 'HH:mm')}\n                                    onChange={(e) => {\n                                        const [hours, minutes] = e.target.value.split(':').map(Number);\n                                        const newStart = new Date(editedEvent.start);\n                                        newStart.setHours(hours, minutes);\n                                        setEditedEvent(prev => ({ ...prev, start: newStart }));\n                                    }}\n                                    className=\"w-full p-2 rounded bg-[var(--tokyo-bg)] text-[var(--tokyo-fg)] border border-[var(--tokyo-border)]\"\n                                />\n                            </div>\n                            <div>\n                                <label className=\"block text-sm text-[var(--tokyo-purple)] mb-1\">End Time</label>\n                                <input\n                                    type=\"time\"\n                                    value={format(editedEvent.end, 'HH:mm')}\n                                    onChange={(e) => {\n                                        const [hours, minutes] = e.target.value.split(':').map(Number);\n                                        const newEnd = new Date(editedEvent.end);\n                                        newEnd.setHours(hours, minutes);\n                                        setEditedEvent(prev => ({ ...prev, end: newEnd }));\n                                    }}\n                                    className=\"w-full p-2 rounded bg-[var(--tokyo-bg)] text-[var(--tokyo-fg)] border border-[var(--tokyo-border)]\"\n                                />\n                            </div>\n                        </div>\n\n                        <textarea\n                            value={editedEvent.description}\n                            onChange={(e) => setEditedEvent(prev => ({ ...prev, description: e.target.value }))}\n                            className=\"w-full mb-4 p-2 rounded bg-[var(--tokyo-bg)] text-[var(--tokyo-fg)] border border-[var(--tokyo-border)]\"\n                            rows={3}\n                            placeholder=\"Description (optional)\"\n                        />\n\n                        <div className=\"flex justify-end gap-2\">\n                            <button\n                                onClick={handleSave}\n                                className=\"px-4 py-2 bg-[var(--tokyo-green)] text-[var(--tokyo-bg)] rounded hover:bg-[var(--tokyo-green)]/90\"\n                            >\n                                Save\n                            </button>\n                            <button\n                                onClick={() => {\n                                    setIsEditing(false);\n                                    setEditedEvent(event);\n                                }}\n                                className=\"px-4 py-2 bg-[var(--tokyo-red)] text-[var(--tokyo-bg)] rounded hover:bg-[var(--tokyo-red)]/90\"\n                            >\n                                Cancel\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            )}\n\n            {/* Delete Confirmation Modal */}\n            {showDeleteConfirm && (\n                <div\n                    className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50\"\n                    onClick={(e) => {\n                        if (e.target === e.currentTarget) {\n                            setShowDeleteConfirm(false);\n                        }\n                    }}\n                >\n                    <div className=\"bg-[var(--tokyo-bg-lighter)] p-6 rounded-lg shadow-xl\" onClick={e => e.stopPropagation()}>\n                        <h3 className=\"text-lg font-bold text-[var(--tokyo-cyan)] mb-4\">Delete Event</h3>\n                        <p className=\"text-[var(--tokyo-fg)] mb-6\">Are you sure you want to delete this event?</p>\n                        <div className=\"flex justify-end gap-2\">\n                            <button\n                                onClick={() => {\n                                    onDelete?.(event);\n                                    setShowDeleteConfirm(false);\n                                    setIsEditing(false);\n                                    setIsViewingDetails(false);\n                                }}\n                                className=\"px-4 py-2 bg-[var(--tokyo-red)] text-[var(--tokyo-bg)] rounded hover:bg-[var(--tokyo-red)]/90\"\n                            >\n                                Delete\n                            </button>\n                            <button\n                                onClick={() => setShowDeleteConfirm(false)}\n                                className=\"px-4 py-2 bg-[var(--tokyo-bg)] text-[var(--tokyo-fg)] border border-[var(--tokyo-border)] rounded\"\n                            >\n                                Cancel\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </>\n    );\n}; \n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 781, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 787, "column": 0}, "map": {"version":3,"sources":["file:///home/kagenou-sama/Dev/Calendar-Bot/frontend/src/app/components/DayView.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { format, addMinutes, startOfDay, addDays, isToday, differenceInMinutes } from 'date-fns';\nimport { Event } from '../types/Event';\nimport { CalendarEventCard } from './CalendarEventCard';\n\ninterface DayViewProps {\n    date: Date;\n    events: Event[];\n    onTimeSlotClick: (date: Date) => void;\n    onDateChange: (date: Date) => void;\n    onEventUpdate?: (event: Event) => void;\n    onEventDelete?: (event: Event) => void;\n}\n\nexport const DayView: React.FC<DayViewProps> = ({\n    date,\n    events,\n    onTimeSlotClick,\n    onDateChange,\n    onEventUpdate,\n    onEventDelete\n}) => {\n    const timeSlots = Array.from({ length: 96 }, (_, i) => {\n        const slotDate = addMinutes(startOfDay(date), i * 15);\n        return {\n            time: slotDate,\n            events: events.filter(event =>\n                event.start.toDateString() === date.toDateString() &&\n                event.start.getHours() === slotDate.getHours() &&\n                Math.floor(event.start.getMinutes() / 15) === Math.floor(slotDate.getMinutes() / 15)\n            )\n        };\n    });\n\n    const navigateDay = (direction: 'prev' | 'next') => {\n        const newDate = addDays(date, direction === 'next' ? 1 : -1);\n        onDateChange(newDate);\n    };\n\n    const goToToday = () => {\n        onDateChange(new Date());\n    };\n\n    useEffect(() => {\n        const handleKeyDown = (e: KeyboardEvent) => {\n            if (e.target instanceof HTMLInputElement || e.target instanceof HTMLTextAreaElement) {\n                return;\n            }\n\n            switch (e.key) {\n                case 'ArrowLeft':\n                    navigateDay('prev');\n                    break;\n                case 'ArrowRight':\n                    navigateDay('next');\n                    break;\n                case 't':\n                    if (!e.ctrlKey && !e.metaKey) {\n                        goToToday();\n                    }\n                    break;\n            }\n        };\n\n        window.addEventListener('keydown', handleKeyDown);\n        return () => window.removeEventListener('keydown', handleKeyDown);\n    }, [date]);\n\n    const calculateEventHeight = (event: Event) => {\n        const durationInMinutes = differenceInMinutes(event.end, event.start);\n        const heightInPixels = (durationInMinutes / 15) * 15; // 15px per 15 minutes\n        return heightInPixels;\n    };\n\n    return (\n        <div className=\"w-full max-w-3xl mx-auto rounded-lg bg-[var(--tokyo-bg-lighter)] shadow-xl overflow-auto\">\n            <div className=\"sticky top-0 bg-[var(--tokyo-bg-lighter)] z-10 p-2 border-b border-[var(--tokyo-border)]\">\n                <div className=\"flex justify-between items-center\">\n                    <div className=\"flex items-center gap-1\">\n                        <button\n                            onClick={() => navigateDay('prev')}\n                            className=\"p-1 text-[var(--tokyo-purple)] hover:bg-[var(--tokyo-purple)]/10 rounded-full transition-colors\"\n                            title=\"Previous Day (←)\"\n                        >\n                            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n                            </svg>\n                        </button>\n                        <button\n                            onClick={goToToday}\n                            className={`px-2 py-0.5 rounded text-xs transition-colors ${isToday(date)\n                                ? 'text-[var(--tokyo-blue)] border border-[var(--tokyo-blue)] hover:bg-[var(--tokyo-blue)]/10'\n                                : 'bg-[var(--tokyo-blue)] text-white hover:bg-[var(--tokyo-blue)]/90'\n                                }`}\n                            title=\"Today (T)\"\n                        >\n                            Today\n                        </button>\n                    </div>\n\n                    <h2 className=\"text-xl font-bold text-[var(--tokyo-cyan)]\">\n                        {format(date, 'EEEE, MMMM d')}\n                    </h2>\n\n                    <button\n                        onClick={() => navigateDay('next')}\n                        className=\"p-1 text-[var(--tokyo-purple)] hover:bg-[var(--tokyo-purple)]/10 rounded-full transition-colors\"\n                        title=\"Next Day (→)\"\n                    >\n                        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                        </svg>\n                    </button>\n                </div>\n            </div>\n\n            <div className=\"relative\">\n                <div className=\"absolute top-0 bottom-0 left-16 border-r border-[var(--tokyo-border)]\"></div>\n                {timeSlots.map(({ time, events }) => (\n                    <div\n                        key={time.toISOString()}\n                        className={`flex min-h-[15px] hover:bg-[var(--tokyo-purple)]/5 transition-colors relative group ${time.getMinutes() === 0 && time.getHours() !== 0 ? 'border-t border-[var(--tokyo-border)]' : ''\n                            }`}\n                    >\n                        <div className=\"w-16 flex-shrink-0\">\n                            {time.getMinutes() === 0 && (\n                                <span className={`text-[11px] text-[var(--tokyo-purple)] absolute -left-1 px-2 py-0.5 bg-[var(--tokyo-bg-lighter)] min-w-[65px] ${time.getHours() === 0 ? '-top-4' : '-top-3 -translate-y-[1px]'\n                                    }`}>\n                                    {format(time, 'h a')}\n                                </span>\n                            )}\n                        </div>\n                        <div\n                            className=\"flex-grow cursor-pointer relative\"\n                            onClick={() => onTimeSlotClick(time)}\n                        >\n                            {events.map(event => (\n                                <div\n                                    key={event.id}\n                                    className=\"absolute left-1 right-1\"\n                                    style={{\n                                        top: 0,\n                                        zIndex: 10\n                                    }}\n                                >\n                                    <CalendarEventCard\n                                        event={event}\n                                        onUpdate={onEventUpdate}\n                                        onDelete={onEventDelete}\n                                    />\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}; "],"names":[],"mappings":"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"}},
    {"offset": {"line": 1028, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1034, "column": 0}, "map": {"version":3,"sources":["file:///home/kagenou-sama/Dev/Calendar-Bot/frontend/src/app/components/MultiDayView.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport {\n    format,\n    addMinutes,\n    startOfDay,\n    addDays,\n    isToday,\n    startOfWeek,\n    eachDayOfInterval,\n    setMinutes,\n    setHours,\n    getHours,\n    getMinutes,\n    isSameDay,\n    isWithinInterval,\n    differenceInMinutes\n} from 'date-fns';\nimport { Event } from '../types/Event';\nimport { CalendarEventCard } from './CalendarEventCard';\n\ninterface MultiDayViewProps {\n    date: Date;\n    events: Event[];\n    onTimeSlotClick: (date: Date) => void;\n    onDateChange: (date: Date) => void;\n    onEventUpdate?: (event: Event) => void;\n    onEventDelete?: (event: Event) => void;\n    numberOfDays?: 3 | 7;\n}\n\nexport const MultiDayView: React.FC<MultiDayViewProps> = ({\n    date,\n    events,\n    onTimeSlotClick,\n    onDateChange,\n    onEventUpdate,\n    onEventDelete,\n    numberOfDays = 7\n}) => {\n    const startDate = numberOfDays === 7 ? startOfWeek(date) : date;\n    const days = eachDayOfInterval({\n        start: startDate,\n        end: addDays(startDate, numberOfDays - 1)\n    });\n\n    const timeSlots = Array.from({ length: 96 }, (_, i) => addMinutes(startOfDay(date), i * 15));\n\n    const navigateDays = (direction: 'prev' | 'next') => {\n        const newDate = addDays(date, direction === 'next' ? numberOfDays : -numberOfDays);\n        onDateChange(newDate);\n    };\n\n    const goToToday = () => {\n        onDateChange(new Date());\n    };\n\n    const calculateEventHeight = (event: Event) => {\n        const durationInMinutes = differenceInMinutes(event.end, event.start);\n        const heightInPixels = (durationInMinutes / 15) * 15; // 15px per 15 minutes\n        return heightInPixels;\n    };\n\n    useEffect(() => {\n        const handleKeyDown = (e: KeyboardEvent) => {\n            if (e.target instanceof HTMLInputElement || e.target instanceof HTMLTextAreaElement) {\n                return;\n            }\n\n            switch (e.key) {\n                case 'ArrowLeft':\n                    navigateDays('prev');\n                    break;\n                case 'ArrowRight':\n                    navigateDays('next');\n                    break;\n                case 't':\n                    if (!e.ctrlKey && !e.metaKey) {\n                        goToToday();\n                    }\n                    break;\n            }\n        };\n\n        window.addEventListener('keydown', handleKeyDown);\n        return () => window.removeEventListener('keydown', handleKeyDown);\n    }, [date]);\n\n    return (\n        <div className=\"w-full max-w-5xl mx-auto rounded-lg bg-[var(--tokyo-bg-lighter)] shadow-xl overflow-auto\">\n            <div className=\"sticky top-0 bg-[var(--tokyo-bg-lighter)] z-10 p-2 border-b border-[var(--tokyo-border)]\">\n                <div className=\"flex justify-between items-center\">\n                    <div className=\"flex items-center gap-1\">\n                        <button\n                            onClick={() => navigateDays('prev')}\n                            className=\"p-1 text-[var(--tokyo-purple)] hover:bg-[var(--tokyo-purple)]/10 rounded-full transition-colors\"\n                            title={`Previous ${numberOfDays} Days (←)`}\n                        >\n                            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n                            </svg>\n                        </button>\n                        <button\n                            onClick={goToToday}\n                            className={`px-2 py-0.5 rounded text-xs transition-colors ${isToday(date)\n                                ? 'text-[var(--tokyo-blue)] border border-[var(--tokyo-blue)] hover:bg-[var(--tokyo-blue)]/10'\n                                : 'bg-[var(--tokyo-blue)] text-white hover:bg-[var(--tokyo-blue)]/90'\n                                }`}\n                            title=\"Today (T)\"\n                        >\n                            Today\n                        </button>\n                        <button\n                            onClick={() => navigateDays('next')}\n                            className=\"p-1 text-[var(--tokyo-purple)] hover:bg-[var(--tokyo-purple)]/10 rounded-full transition-colors\"\n                            title={`Next ${numberOfDays} Days (→)`}\n                        >\n                            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                            </svg>\n                        </button>\n                    </div>\n                </div>\n\n                <div className=\"grid mt-2\" style={{ gridTemplateColumns: `80px repeat(${numberOfDays}, 1fr)` }}>\n                    <div className=\"text-center py-1\"></div>\n                    {days.map(day => (\n                        <div\n                            key={day.toISOString()}\n                            className={`text-center py-1 ${isToday(day) ? 'text-[var(--tokyo-blue)]' : ''}`}\n                        >\n                            <div className=\"font-medium text-xs text-[var(--tokyo-purple)]\">\n                                {format(day, 'EEE')}\n                            </div>\n                            <div className=\"text-sm font-bold text-[var(--tokyo-cyan)]\">\n                                {format(day, 'MMM d')}\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n\n            <div className=\"grid\" style={{ gridTemplateColumns: `80px repeat(${numberOfDays}, 1fr)` }}>\n                {/* Time column */}\n                <div>\n                    {timeSlots.map((time) => (\n                        <div key={time.toISOString()} className={`min-h-[15px] relative ${time.getMinutes() === 0 && time.getHours() !== 0 ? 'border-t border-[var(--tokyo-border)]' : ''\n                            }`}>\n                            {time.getMinutes() === 0 && (\n                                <span className={`text-[11px] text-[var(--tokyo-purple)] absolute -left-1 px-2 py-0.5 bg-[var(--tokyo-bg-lighter)] min-w-[65px] ${time.getHours() === 0 ? '-top-4' : '-top-3 -translate-y-[1px]'\n                                    }`}>\n                                    {format(time, 'h a')}\n                                </span>\n                            )}\n                        </div>\n                    ))}\n                </div>\n\n                {/* Day columns */}\n                {days.map((day) => (\n                    <div key={day.toISOString()} className={`border-l border-[var(--tokyo-border)]`}>\n                        {timeSlots.map((time) => {\n                            const slotStart = setMinutes(setHours(day, getHours(time)), getMinutes(time));\n                            const slotEnd = addMinutes(slotStart, 15);\n                            const eventsInSlot = events.filter((event) =>\n                                isSameDay(event.start, day) &&\n                                event.start.getHours() === time.getHours() &&\n                                event.start.getMinutes() === time.getMinutes()\n                            );\n\n                            return (\n                                <div\n                                    key={`${day.toISOString()}-${time.toISOString()}`}\n                                    className={`min-h-[15px] hover:bg-[var(--tokyo-purple)]/5 transition-colors relative ${time.getMinutes() === 0 && time.getHours() !== 0 ? 'border-t border-[var(--tokyo-border)]' : ''\n                                        }`}\n                                    onClick={() => onTimeSlotClick(slotStart)}\n                                >\n                                    {eventsInSlot.map(event => (\n                                        <div\n                                            key={event.id}\n                                            className=\"absolute left-1 right-1\"\n                                            style={{\n                                                top: 0,\n                                                zIndex: 10\n                                            }}\n                                        >\n                                            <CalendarEventCard\n                                                event={event}\n                                                onUpdate={onEventUpdate}\n                                                onDelete={onEventDelete}\n                                            />\n                                        </div>\n                                    ))}\n                                </div>\n                            );\n                        })}\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}; "],"names":[],"mappings":"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"}},
    {"offset": {"line": 1322, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1328, "column": 0}, "map": {"version":3,"sources":["file:///home/kagenou-sama/Dev/Calendar-Bot/frontend/src/app/components/EventCard.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { format } from 'date-fns';\nimport { Event } from '../types/Event';\n\ninterface EventCardProps {\n  event: Event;\n  onClick?: (event: Event) => void;\n  onDelete?: (event: Event) => void;\n  onUpdate?: (event: Event) => void;\n}\n\nexport const EventCard: React.FC<EventCardProps> = ({ event, onClick, onDelete, onUpdate }) => {\n  const { title, description, start, end, color = 'var(--tokyo-blue)' } = event;\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedEvent, setEditedEvent] = useState(event);\n\n  const handleClick = (e: React.MouseEvent) => {\n    if (!isEditing) {\n      setIsExpanded(!isExpanded);\n      onClick?.(event);\n    }\n  };\n\n  const handleEdit = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    setIsEditing(true);\n    setIsExpanded(false);\n  };\n\n  const handleSave = async (e: React.MouseEvent) => {\n    e.stopPropagation();\n    onUpdate?.(editedEvent);\n    setIsEditing(false);\n  };\n\n  const handleCancel = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    setEditedEvent(event);\n    setIsEditing(false);\n  };\n\n  if (isEditing) {\n    return (\n      <div className=\"p-2 rounded mb-2 bg-[var(--tokyo-bg)] border border-[var(--tokyo-border)]\"\n        style={{ borderLeft: `4px solid ${color}` }}>\n        <input\n          type=\"text\"\n          value={editedEvent.title}\n          onChange={(e) => setEditedEvent(prev => ({ ...prev, title: e.target.value }))}\n          className=\"w-full mb-2 p-2 rounded bg-[var(--tokyo-bg-lighter)] text-[var(--tokyo-fg)] border border-[var(--tokyo-border)]\"\n        />\n        <div className=\"grid grid-cols-2 gap-2 mb-2\">\n          <div>\n            <label className=\"block text-xs text-[var(--tokyo-purple)] mb-1\">Start Time</label>\n            <input\n              type=\"time\"\n              value={format(editedEvent.start, 'HH:mm')}\n              onChange={(e) => {\n                const [hours, minutes] = e.target.value.split(':').map(Number);\n                const newStart = new Date(editedEvent.start);\n                newStart.setHours(hours, minutes);\n                setEditedEvent(prev => ({ ...prev, start: newStart }));\n              }}\n              className=\"w-full p-2 rounded bg-[var(--tokyo-bg-lighter)] text-[var(--tokyo-fg)] border border-[var(--tokyo-border)]\"\n            />\n          </div>\n          <div>\n            <label className=\"block text-xs text-[var(--tokyo-purple)] mb-1\">End Time</label>\n            <input\n              type=\"time\"\n              value={format(editedEvent.end, 'HH:mm')}\n              onChange={(e) => {\n                const [hours, minutes] = e.target.value.split(':').map(Number);\n                const newEnd = new Date(editedEvent.end);\n                newEnd.setHours(hours, minutes);\n                setEditedEvent(prev => ({ ...prev, end: newEnd }));\n              }}\n              className=\"w-full p-2 rounded bg-[var(--tokyo-bg-lighter)] text-[var(--tokyo-fg)] border border-[var(--tokyo-border)]\"\n            />\n          </div>\n        </div>\n        <textarea\n          value={editedEvent.description}\n          onChange={(e) => setEditedEvent(prev => ({ ...prev, description: e.target.value }))}\n          className=\"w-full mb-2 p-2 rounded bg-[var(--tokyo-bg-lighter)] text-[var(--tokyo-fg)] border border-[var(--tokyo-border)]\"\n          rows={2}\n        />\n        <div className=\"flex justify-between items-center\">\n          <button\n            onClick={(e) => {\n              e.stopPropagation();\n              setShowDeleteConfirm(true);\n            }}\n            className=\"px-3 py-1 text-[var(--tokyo-red)] hover:bg-[var(--tokyo-red)]/10 text-sm rounded\"\n          >\n            Delete Event\n          </button>\n          <div className=\"flex gap-2\">\n            <button\n              onClick={handleSave}\n              className=\"px-3 py-1 bg-[var(--tokyo-green)] text-[var(--tokyo-bg)] text-sm rounded hover:bg-[var(--tokyo-green)]/90\"\n            >\n              Save\n            </button>\n            <button\n              onClick={handleCancel}\n              className=\"px-3 py-1 bg-[var(--tokyo-bg-lighter)] text-[var(--tokyo-fg)] text-sm rounded hover:bg-[var(--tokyo-bg-lighter)]/90\"\n            >\n              Cancel\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      onClick={handleClick}\n      className=\"group relative p-2 rounded mb-2 cursor-pointer transition-all\n                bg-[var(--tokyo-bg)] hover:bg-[var(--tokyo-bg)]/80 border border-[var(--tokyo-border)]\"\n      style={{ borderLeft: `4px solid ${color}` }}\n    >\n      <div className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity\">\n        <button\n          onClick={handleEdit}\n          className=\"p-1 text-[var(--tokyo-cyan)] hover:bg-[var(--tokyo-cyan)]/10 rounded-full\"\n          title=\"Edit Event\"\n        >\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n          </svg>\n        </button>\n      </div>\n\n      <div className=\"flex items-center gap-2\">\n        <span className=\"text-xs text-[var(--tokyo-purple)]\">\n          {format(start, 'h:mm a')}\n        </span>\n        <h3 className=\"font-medium text-[var(--tokyo-cyan)] flex-1 truncate\">{title}</h3>\n        <svg\n          className={`w-4 h-4 text-[var(--tokyo-purple)] transition-transform flex-shrink-0 ${isExpanded ? 'rotate-180' : ''}`}\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n        </svg>\n      </div>\n\n      {isExpanded && (\n        <div className=\"mt-2 pt-2 border-t border-[var(--tokyo-border)]\" onClick={e => e.stopPropagation()}>\n          <div className=\"text-xs text-[var(--tokyo-purple)]\">\n            {format(start, 'h:mm a')} - {format(end, 'h:mm a')}\n          </div>\n          {description && (\n            <p className=\"mt-1 text-sm text-[var(--tokyo-fg)]/80\">{description}</p>\n          )}\n        </div>\n      )}\n\n      {showDeleteConfirm && (\n        <div\n          className=\"absolute inset-0 bg-[var(--tokyo-bg)]/95 backdrop-blur-sm flex items-center justify-center rounded\"\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              e.stopPropagation();\n              setShowDeleteConfirm(false);\n            }\n          }}\n        >\n          <div className=\"p-4 text-center\" onClick={e => e.stopPropagation()}>\n            <p className=\"text-sm text-[var(--tokyo-fg)] mb-3\">\n              Are you sure you want to delete this event?\n            </p>\n            <div className=\"flex gap-2 justify-center\">\n              <button\n                onClick={(e) => {\n                  e.stopPropagation();\n                  onDelete?.(event);\n                  setShowDeleteConfirm(false);\n                }}\n                className=\"px-3 py-1 bg-[var(--tokyo-red)] text-[var(--tokyo-bg)] text-sm rounded hover:bg-[var(--tokyo-red)]/90\"\n              >\n                Delete\n              </button>\n              <button\n                onClick={(e) => {\n                  e.stopPropagation();\n                  setShowDeleteConfirm(false);\n                }}\n                className=\"px-3 py-1 bg-[var(--tokyo-bg-lighter)] text-[var(--tokyo-fg)] text-sm rounded hover:bg-[var(--tokyo-bg-lighter)]/90\"\n              >\n                Cancel\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}; "],"names":[],"mappings":"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"}},
    {"offset": {"line": 1719, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1725, "column": 0}, "map": {"version":3,"sources":["file:///home/kagenou-sama/Dev/Calendar-Bot/frontend/src/app/utils/api.ts"],"sourcesContent":["import { Event } from '../types/Event';\n\nconst API_BASE_URL = 'http://localhost:8080/api';\n\nexport const api = {\n    async getEvents(): Promise<Event[]> {\n        const response = await fetch(`${API_BASE_URL}/events`);\n        if (!response.ok) {\n            throw new Error('Failed to fetch events');\n        }\n        const events = await response.json();\n        return events.map((event: any) => ({\n            ...event,\n            start: new Date(event.start),\n            end: new Date(event.end)\n        }));\n    },\n\n    async createEvent(event: Omit<Event, 'id'>): Promise<Event> {\n        const response = await fetch(`${API_BASE_URL}/events`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(event),\n        });\n        if (!response.ok) {\n            throw new Error('Failed to create event');\n        }\n        const newEvent = await response.json();\n        return {\n            ...newEvent,\n            start: new Date(newEvent.start),\n            end: new Date(newEvent.end)\n        };\n    },\n\n    async updateEvent(event: Event): Promise<Event> {\n        const response = await fetch(`${API_BASE_URL}/events/${event.id}`, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(event),\n        });\n        if (!response.ok) {\n            throw new Error('Failed to update event');\n        }\n        const updatedEvent = await response.json();\n        return {\n            ...updatedEvent,\n            start: new Date(updatedEvent.start),\n            end: new Date(updatedEvent.end)\n        };\n    },\n\n    async deleteEvent(id: string): Promise<void> {\n        const response = await fetch(`${API_BASE_URL}/events/${id}`, {\n            method: 'DELETE',\n        });\n        if (!response.ok) {\n            throw new Error('Failed to delete event');\n        }\n    }\n}; "],"names":[],"mappings":";;;AAEA,MAAM,eAAe;AAEd,MAAM,MAAM;IACf,MAAM;QACF,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,OAAO,CAAC;QACrD,IAAI,CAAC,SAAS,EAAE,EAAE;YACd,MAAM,IAAI,MAAM;QACpB;QACA,MAAM,SAAS,MAAM,SAAS,IAAI;QAClC,OAAO,OAAO,GAAG,CAAC,CAAC,QAAe,CAAC;gBAC/B,GAAG,KAAK;gBACR,OAAO,IAAI,KAAK,MAAM,KAAK;gBAC3B,KAAK,IAAI,KAAK,MAAM,GAAG;YAC3B,CAAC;IACL;IAEA,MAAM,aAAY,KAAwB;QACtC,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,OAAO,CAAC,EAAE;YACnD,QAAQ;YACR,SAAS;gBACL,gBAAgB;YACpB;YACA,MAAM,KAAK,SAAS,CAAC;QACzB;QACA,IAAI,CAAC,SAAS,EAAE,EAAE;YACd,MAAM,IAAI,MAAM;QACpB;QACA,MAAM,WAAW,MAAM,SAAS,IAAI;QACpC,OAAO;YACH,GAAG,QAAQ;YACX,OAAO,IAAI,KAAK,SAAS,KAAK;YAC9B,KAAK,IAAI,KAAK,SAAS,GAAG;QAC9B;IACJ;IAEA,MAAM,aAAY,KAAY;QAC1B,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,QAAQ,EAAE,MAAM,EAAE,EAAE,EAAE;YAC/D,QAAQ;YACR,SAAS;gBACL,gBAAgB;YACpB;YACA,MAAM,KAAK,SAAS,CAAC;QACzB;QACA,IAAI,CAAC,SAAS,EAAE,EAAE;YACd,MAAM,IAAI,MAAM;QACpB;QACA,MAAM,eAAe,MAAM,SAAS,IAAI;QACxC,OAAO;YACH,GAAG,YAAY;YACf,OAAO,IAAI,KAAK,aAAa,KAAK;YAClC,KAAK,IAAI,KAAK,aAAa,GAAG;QAClC;IACJ;IAEA,MAAM,aAAY,EAAU;QACxB,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,QAAQ,EAAE,IAAI,EAAE;YACzD,QAAQ;QACZ;QACA,IAAI,CAAC,SAAS,EAAE,EAAE;YACd,MAAM,IAAI,MAAM;QACpB;IACJ;AACJ"}},
    {"offset": {"line": 1787, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1793, "column": 0}, "map": {"version":3,"sources":["file:///home/kagenou-sama/Dev/Calendar-Bot/frontend/src/app/hooks/useTheme.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\n\ntype Theme = 'light' | 'dark';\n\nexport const useTheme = () => {\n    const [theme, setTheme] = useState<Theme>(() => {\n        // Check localStorage first\n        if (typeof window !== 'undefined') {\n            const saved = localStorage.getItem('theme') as Theme;\n            if (saved) return saved;\n\n            // Check system preference\n            if (window.matchMedia('(prefers-color-scheme: dark)').matches) {\n                return 'dark';\n            }\n        }\n        return 'dark'; // Default theme\n    });\n\n    useEffect(() => {\n        const root = document.documentElement;\n        root.setAttribute('data-theme', theme);\n        localStorage.setItem('theme', theme);\n    }, [theme]);\n\n    const toggleTheme = () => {\n        setTheme(prev => prev === 'dark' ? 'light' : 'dark');\n    };\n\n    return { theme, toggleTheme };\n}; "],"names":[],"mappings":";;;AAAA;;AAIO,MAAM,WAAW;IACpB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAS;QACtC,2BAA2B;QAC3B,uCAAmC;;QAQnC;QACA,OAAO,QAAQ,gBAAgB;IACnC;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,OAAO,SAAS,eAAe;QACrC,KAAK,YAAY,CAAC,cAAc;QAChC,aAAa,OAAO,CAAC,SAAS;IAClC,GAAG;QAAC;KAAM;IAEV,MAAM,cAAc;QAChB,SAAS,CAAA,OAAQ,SAAS,SAAS,UAAU;IACjD;IAEA,OAAO;QAAE;QAAO;IAAY;AAChC"}},
    {"offset": {"line": 1821, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1827, "column": 0}, "map": {"version":3,"sources":["file:///home/kagenou-sama/Dev/Calendar-Bot/frontend/src/app/components/ThemeToggle.tsx"],"sourcesContent":["import React from 'react';\nimport { useTheme } from '../hooks/useTheme';\n\nexport const ThemeToggle: React.FC = () => {\n    const { theme, toggleTheme } = useTheme();\n\n    return (\n        <button\n            onClick={toggleTheme}\n            className=\"p-2 rounded-full transition-colors hover:bg-[var(--tokyo-fg)]/10\"\n            title={`Switch to ${theme === 'dark' ? 'light' : 'dark'} mode`}\n        >\n            {theme === 'dark' ? (\n                <svg\n                    className=\"w-5 h-5 text-[var(--tokyo-purple)]\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                >\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\"\n                    />\n                </svg>\n            ) : (\n                <svg\n                    className=\"w-5 h-5 text-[var(--tokyo-purple)]\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                >\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\"\n                    />\n                </svg>\n            )}\n        </button>\n    );\n}; "],"names":[],"mappings":";;;;AACA;;;AAEO,MAAM,cAAwB;IACjC,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,WAAQ,AAAD;IAEtC,qBACI,8OAAC;QACG,SAAS;QACT,WAAU;QACV,OAAO,CAAC,UAAU,EAAE,UAAU,SAAS,UAAU,OAAO,KAAK,CAAC;kBAE7D,UAAU,uBACP,8OAAC;YACG,WAAU;YACV,MAAK;YACL,QAAO;YACP,SAAQ;sBAER,cAAA,8OAAC;gBACG,eAAc;gBACd,gBAAe;gBACf,aAAa;gBACb,GAAE;;;;;;;;;;iCAIV,8OAAC;YACG,WAAU;YACV,MAAK;YACL,QAAO;YACP,SAAQ;sBAER,cAAA,8OAAC;gBACG,eAAc;gBACd,gBAAe;gBACf,aAAa;gBACb,GAAE;;;;;;;;;;;;;;;;AAM1B"}},
    {"offset": {"line": 1885, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1891, "column": 0}, "map": {"version":3,"sources":["file:///home/kagenou-sama/Dev/Calendar-Bot/frontend/src/app/components/ChatButton.tsx"],"sourcesContent":["import React from 'react';\n\ninterface ChatButtonProps {\n    onClick: () => void;\n    isOpen: boolean;\n}\n\nexport const ChatButton: React.FC<ChatButtonProps> = ({ onClick, isOpen }) => {\n    return (\n        <button\n            onClick={onClick}\n            className={`fixed bottom-6 right-6 w-14 h-14 rounded-full shadow-lg \n                      bg-[var(--tokyo-purple)] text-white \n                      hover:bg-[var(--tokyo-purple)]/90 transition-all\n                      flex items-center justify-center\n                      ${isOpen ? 'scale-90' : 'scale-100'}`}\n            title=\"Chat with AI Assistant\"\n        >\n            {isOpen ? (\n                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n            ) : (\n                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2}\n                        d=\"M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-4l-4 4z\" />\n                </svg>\n            )}\n        </button>\n    );\n}; "],"names":[],"mappings":";;;;;AAOO,MAAM,aAAwC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE;IACrE,qBACI,8OAAC;QACG,SAAS;QACT,WAAW,CAAC;;;;sBAIF,EAAE,SAAS,aAAa,aAAa;QAC/C,OAAM;kBAEL,uBACG,8OAAC;YAAI,WAAU;YAAU,MAAK;YAAO,QAAO;YAAe,SAAQ;sBAC/D,cAAA,8OAAC;gBAAK,eAAc;gBAAQ,gBAAe;gBAAQ,aAAa;gBAAG,GAAE;;;;;;;;;;iCAGzE,8OAAC;YAAI,WAAU;YAAU,MAAK;YAAO,QAAO;YAAe,SAAQ;sBAC/D,cAAA,8OAAC;gBAAK,eAAc;gBAAQ,gBAAe;gBAAQ,aAAa;gBAC5D,GAAE;;;;;;;;;;;;;;;;AAK1B"}},
    {"offset": {"line": 1950, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1956, "column": 0}, "map": {"version":3,"sources":["file:///home/kagenou-sama/Dev/Calendar-Bot/frontend/src/app/services/chatService.ts"],"sourcesContent":["import { Event } from '../types/Event';\nimport { api } from '../utils/api';\n\ninterface ChatResponse {\n    text: string;\n    action?: 'add' | 'edit' | 'delete';\n    success?: boolean;\n}\n\ninterface CalendarAction {\n    type: 'response' | 'create' | 'update' | 'delete';\n    title?: string;\n    description?: string;\n    start?: string;\n    end?: string;\n    event_id?: string;\n}\n\ninterface AIResponse {\n    message: string;\n    action?: CalendarAction;\n}\n\n// Helper function to map backend action types to frontend types\nfunction mapActionType(type: 'response' | 'create' | 'update' | 'delete'): 'add' | 'edit' | 'delete' | undefined {\n    switch (type) {\n        case 'response': return undefined;\n        case 'create': return 'add';\n        case 'update': return 'edit';\n        case 'delete': return 'delete';\n    }\n}\n\nexport class ChatService {\n    static async processMessage(message: string, events: Event[]): Promise<ChatResponse> {\n        try {\n            const response = await fetch('http://localhost:8080/api/chat', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    message,\n                    timezone: Intl.DateTimeFormat().resolvedOptions().timeZone\n                }),\n            });\n\n            if (!response.ok) {\n                throw new Error('Failed to process message');\n            }\n\n            const data: AIResponse = await response.json();\n\n            // Just return the response and let the frontend handle the actions\n            return {\n                text: data.message,\n                action: data.action ? mapActionType(data.action.type) : undefined,\n                success: true,\n            };\n        } catch (error) {\n            console.error('Error processing message:', error);\n            return {\n                text: \"Something went wrong while processing your message. Could you try again?\",\n                success: false,\n            };\n        }\n    }\n} "],"names":[],"mappings":";;;AAuBA,gEAAgE;AAChE,SAAS,cAAc,IAAiD;IACpE,OAAQ;QACJ,KAAK;YAAY,OAAO;QACxB,KAAK;YAAU,OAAO;QACtB,KAAK;YAAU,OAAO;QACtB,KAAK;YAAU,OAAO;IAC1B;AACJ;AAEO,MAAM;IACT,aAAa,eAAe,OAAe,EAAE,MAAe,EAAyB;QACjF,IAAI;YACA,MAAM,WAAW,MAAM,MAAM,kCAAkC;gBAC3D,QAAQ;gBACR,SAAS;oBACL,gBAAgB;gBACpB;gBACA,MAAM,KAAK,SAAS,CAAC;oBACjB;oBACA,UAAU,KAAK,cAAc,GAAG,eAAe,GAAG,QAAQ;gBAC9D;YACJ;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBACd,MAAM,IAAI,MAAM;YACpB;YAEA,MAAM,OAAmB,MAAM,SAAS,IAAI;YAE5C,mEAAmE;YACnE,OAAO;gBACH,MAAM,KAAK,OAAO;gBAClB,QAAQ,KAAK,MAAM,GAAG,cAAc,KAAK,MAAM,CAAC,IAAI,IAAI;gBACxD,SAAS;YACb;QACJ,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,6BAA6B;YAC3C,OAAO;gBACH,MAAM;gBACN,SAAS;YACb;QACJ;IACJ;AACJ"}},
    {"offset": {"line": 2004, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2010, "column": 0}, "map": {"version":3,"sources":["file:///home/kagenou-sama/Dev/Calendar-Bot/frontend/src/app/components/ChatWidget.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Event } from '../types/Event';\nimport { ChatService } from '../services/chatService';\n\ninterface Message {\n    id: string;\n    text: string;\n    sender: 'user' | 'ai';\n    timestamp: Date;\n}\n\ninterface ChatWidgetProps {\n    isOpen: boolean;\n    events: Event[];\n    onEventsChange: () => void;\n}\n\nexport const ChatWidget: React.FC<ChatWidgetProps> = ({ isOpen, events, onEventsChange }) => {\n    const [messages, setMessages] = useState<Message[]>([\n        {\n            id: '1',\n            text: \"Hi, I'm your AI calendar assistant. Need help managing your schedule?\",\n            sender: 'ai',\n            timestamp: new Date()\n        }\n    ]);\n    const [inputValue, setInputValue] = useState('');\n    const [isProcessing, setIsProcessing] = useState(false);\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n        if (!inputValue.trim() || isProcessing) return;\n\n        const userMessage: Message = {\n            id: Date.now().toString(),\n            text: inputValue,\n            sender: 'user',\n            timestamp: new Date()\n        };\n\n        setMessages(prev => [...prev, userMessage]);\n        setInputValue('');\n        setIsProcessing(true);\n\n        try {\n            const response = await ChatService.processMessage(userMessage.text, events);\n\n            const aiMessage: Message = {\n                id: (Date.now() + 1).toString(),\n                text: response.text,\n                sender: 'ai',\n                timestamp: new Date()\n            };\n\n            setMessages(prev => [...prev, aiMessage]);\n\n            if (response.success) {\n                onEventsChange();\n            }\n        } catch (error) {\n            const errorMessage: Message = {\n                id: (Date.now() + 1).toString(),\n                text: \"Sorry boss, something went wrong. Let me know if you want to try again.\",\n                sender: 'ai',\n                timestamp: new Date()\n            };\n            setMessages(prev => [...prev, errorMessage]);\n        } finally {\n            setIsProcessing(false);\n        }\n    };\n\n    return (\n        <div\n            className={`fixed bottom-24 right-6 w-96 bg-[var(--tokyo-bg-lighter)] rounded-lg shadow-xl \n                       transition-all duration-300 transform origin-bottom-right\n                       ${isOpen ? 'scale-100 opacity-100' : 'scale-0 opacity-0'}`}\n        >\n            {/* Header */}\n            <div className=\"p-4 border-b border-[var(--tokyo-border)]\">\n                <h3 className=\"text-lg font-bold text-[var(--tokyo-cyan)]\">\n                    AI Calendar Assistant\n                </h3>\n            </div>\n\n            {/* Messages */}\n            <div className=\"h-96 overflow-y-auto p-4 space-y-4\">\n                {messages.map(message => (\n                    <div\n                        key={message.id}\n                        className={`flex ${message.sender === 'user' ? 'justify-end' : 'justify-start'}`}\n                    >\n                        <div\n                            className={`max-w-[80%] p-3 rounded-lg ${message.sender === 'user'\n                                ? 'bg-[var(--tokyo-purple)] text-white'\n                                : 'bg-[var(--tokyo-bg)] text-[var(--tokyo-fg)]'\n                                }`}\n                        >\n                            <p className=\"text-sm whitespace-pre-line\">{message.text}</p>\n                            <span className=\"text-[10px] opacity-70 mt-1 block\">\n                                {message.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n                            </span>\n                        </div>\n                    </div>\n                ))}\n            </div>\n\n            {/* Input */}\n            <form onSubmit={handleSubmit} className=\"p-4 border-t border-[var(--tokyo-border)]\">\n                <div className=\"flex gap-2\">\n                    <input\n                        type=\"text\"\n                        value={inputValue}\n                        onChange={(e) => setInputValue(e.target.value)}\n                        placeholder=\"What can I help you with today?\"\n                        disabled={isProcessing}\n                        className=\"flex-1 p-2 rounded bg-[var(--tokyo-bg)] text-[var(--tokyo-fg)] \n                                 border border-[var(--tokyo-border)] focus:outline-none \n                                 focus:border-[var(--tokyo-purple)] disabled:opacity-50\"\n                    />\n                    <button\n                        type=\"submit\"\n                        disabled={isProcessing}\n                        className=\"px-4 py-2 bg-[var(--tokyo-purple)] text-white rounded \n                                 hover:bg-[var(--tokyo-purple)]/90 transition-colors\n                                 disabled:opacity-50\"\n                    >\n                        {isProcessing ? (\n                            <svg className=\"w-5 h-5 animate-spin\" fill=\"none\" viewBox=\"0 0 24 24\">\n                                <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\n                                <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\" />\n                            </svg>\n                        ) : (\n                            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2}\n                                    d=\"M5 12h14M12 5l7 7-7 7\" />\n                            </svg>\n                        )}\n                    </button>\n                </div>\n            </form>\n        </div>\n    );\n}; "],"names":[],"mappings":"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"}},
    {"offset": {"line": 2233, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2239, "column": 0}, "map": {"version":3,"sources":["file:///home/kagenou-sama/Dev/Calendar-Bot/frontend/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { Calendar } from './components/Calendar';\nimport { DayView } from './components/DayView';\nimport { MultiDayView } from './components/MultiDayView';\nimport { EventCard } from './components/EventCard';\nimport { Event } from './types/Event';\nimport { api } from './utils/api';\nimport { ThemeToggle } from './components/ThemeToggle';\nimport { format } from 'date-fns';\nimport { ChatButton } from './components/ChatButton';\nimport { ChatWidget } from './components/ChatWidget';\n\ntype ViewType = 'month' | 'week' | '3day' | 'day';\n\nexport default function Home() {\n  const [selectedDate, setSelectedDate] = useState<Date>(new Date());\n  const [events, setEvents] = useState<Event[]>([]);\n  const [isAddingEvent, setIsAddingEvent] = useState(false);\n  const [currentView, setCurrentView] = useState<ViewType>('month');\n  const [newEvent, setNewEvent] = useState<Partial<Event>>({\n    title: '',\n    description: '',\n    color: 'var(--tokyo-blue)'\n  });\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n  const [view, setView] = useState<'day' | 'week'>('week');\n  const [isLoading, setIsLoading] = useState(true);\n  const [isChatOpen, setIsChatOpen] = useState(false);\n\n  const fetchEvents = async () => {\n    try {\n      setIsLoading(true);\n      const fetchedEvents = await api.getEvents();\n      setEvents(fetchedEvents);\n    } catch (error) {\n      console.error('Error fetching events:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchEvents();\n  }, []);\n\n  const handleDateSelect = (date: Date) => {\n    setSelectedDate(date);\n    if (currentView === 'month') {\n      setCurrentView('day');\n    }\n  };\n\n  const handleTimeSlotClick = (date: Date) => {\n    setSelectedDate(date);\n    setNewEvent(prev => ({\n      ...prev,\n      start: date,\n      end: new Date(date.getTime() + 60 * 60 * 1000) // 1 hour duration by default\n    }));\n    setIsAddingEvent(true);\n  };\n\n  const handleAddEvent = async () => {\n    if (!selectedDate || !newEvent.title) return;\n\n    const eventToCreate = {\n      title: newEvent.title,\n      description: newEvent.description || '',\n      start: newEvent.start || selectedDate,\n      end: newEvent.end || new Date(selectedDate.getTime() + 60 * 60 * 1000),\n      color: newEvent.color || 'var(--tokyo-blue)'\n    };\n\n    try {\n      await api.createEvent(eventToCreate);\n      await fetchEvents();\n      setIsAddingEvent(false);\n      setNewEvent({\n        title: '',\n        description: '',\n        color: 'var(--tokyo-blue)'\n      });\n    } catch (error) {\n      console.error('Error creating event:', error);\n    }\n  };\n\n  const handleDeleteEvent = async (eventToDelete: Event) => {\n    try {\n      await api.deleteEvent(eventToDelete.id);\n      await fetchEvents();\n    } catch (error) {\n      console.error('Error deleting event:', error);\n    }\n  };\n\n  const handleDateChange = (newDate: Date) => {\n    setSelectedDate(newDate);\n  };\n\n  const handleUpdateEvent = async (updatedEvent: Event) => {\n    try {\n      await api.updateEvent(updatedEvent);\n      await fetchEvents();\n    } catch (error) {\n      console.error('Error updating event:', error);\n    }\n  };\n\n  return (\n    <main className=\"min-h-screen p-8 bg-[var(--tokyo-bg)]\">\n      <div className=\"max-w-7xl mx-auto\">\n        <div className=\"flex justify-between items-center mb-8\">\n          <h1 className=\"text-4xl font-bold text-[var(--tokyo-purple)]\">\n            Calendar\n          </h1>\n          <div className=\"flex items-center gap-4\">\n            <ThemeToggle />\n            <div className=\"flex gap-2\">\n              <button\n                onClick={() => setCurrentView('month')}\n                className={`px-4 py-2 rounded transition-colors ${currentView === 'month'\n                  ? 'bg-[var(--tokyo-purple)] text-[var(--tokyo-bg)]'\n                  : 'text-[var(--tokyo-purple)] border border-[var(--tokyo-border)]'\n                  }`}\n              >\n                Month\n              </button>\n              <button\n                onClick={() => setCurrentView('week')}\n                className={`px-4 py-2 rounded transition-colors ${currentView === 'week'\n                  ? 'bg-[var(--tokyo-purple)] text-[var(--tokyo-bg)]'\n                  : 'text-[var(--tokyo-purple)] border border-[var(--tokyo-border)]'\n                  }`}\n              >\n                Week\n              </button>\n              <button\n                onClick={() => setCurrentView('3day')}\n                className={`px-4 py-2 rounded transition-colors ${currentView === '3day'\n                  ? 'bg-[var(--tokyo-purple)] text-[var(--tokyo-bg)]'\n                  : 'text-[var(--tokyo-purple)] border border-[var(--tokyo-border)]'\n                  }`}\n              >\n                3 Days\n              </button>\n              <button\n                onClick={() => setCurrentView('day')}\n                className={`px-4 py-2 rounded transition-colors ${currentView === 'day'\n                  ? 'bg-[var(--tokyo-purple)] text-[var(--tokyo-bg)]'\n                  : 'text-[var(--tokyo-purple)] border border-[var(--tokyo-border)]'\n                  }`}\n              >\n                Day\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n          <div className=\"lg:col-span-2\">\n            {currentView === 'month' ? (\n              <Calendar\n                onDateSelect={handleDateSelect}\n                events={events}\n                selectedDate={selectedDate}\n              />\n            ) : currentView === 'day' ? (\n              <DayView\n                date={selectedDate}\n                events={events}\n                onTimeSlotClick={handleTimeSlotClick}\n                onDateChange={setSelectedDate}\n                onEventUpdate={handleUpdateEvent}\n                onEventDelete={handleDeleteEvent}\n              />\n            ) : (\n              <MultiDayView\n                date={selectedDate}\n                events={events}\n                onTimeSlotClick={handleTimeSlotClick}\n                onDateChange={setSelectedDate}\n                onEventUpdate={handleUpdateEvent}\n                onEventDelete={handleDeleteEvent}\n              />\n            )}\n          </div>\n\n          <div className=\"bg-[var(--tokyo-bg-lighter)] p-6 rounded-lg shadow-xl\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h2 className=\"text-xl font-semibold text-[var(--tokyo-cyan)]\">\n                {format(selectedDate, 'MMMM d, yyyy')}\n              </h2>\n              {selectedDate && !isAddingEvent && (\n                <button\n                  onClick={() => setIsAddingEvent(true)}\n                  className=\"px-4 py-2 text-[var(--tokyo-purple)] border border-[var(--tokyo-border)] rounded hover:bg-[var(--tokyo-purple)] hover:text-[var(--tokyo-bg)] transition-colors\"\n                >\n                  Add Event\n                </button>\n              )}\n            </div>\n\n            <div className=\"space-y-4\">\n              {events\n                .filter(event =>\n                  selectedDate &&\n                  event.start.toDateString() === selectedDate.toDateString()\n                )\n                .map(event => (\n                  <EventCard\n                    key={event.id}\n                    event={event}\n                    onClick={(event) => console.log('Event clicked:', event)}\n                    onDelete={handleDeleteEvent}\n                    onUpdate={handleUpdateEvent}\n                  />\n                ))}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isAddingEvent && (\n        <div\n          className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50\"\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setIsAddingEvent(false);\n              setNewEvent({\n                title: '',\n                description: '',\n                color: 'var(--tokyo-blue)'\n              });\n            }\n          }}\n        >\n          <div className=\"bg-[var(--tokyo-bg-lighter)] p-6 rounded-lg shadow-xl w-96\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h3 className=\"text-xl font-bold text-[var(--tokyo-cyan)]\">\n                New Event\n              </h3>\n              <button\n                onClick={(e) => {\n                  e.stopPropagation();\n                  setIsAddingEvent(false);\n                }}\n                className=\"p-1 text-[var(--tokyo-purple)] hover:bg-[var(--tokyo-purple)]/10 rounded-full transition-colors\"\n              >\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n            <input\n              type=\"text\"\n              placeholder=\"Event title\"\n              value={newEvent.title}\n              onChange={(e) => setNewEvent(prev => ({ ...prev, title: e.target.value }))}\n              className=\"w-full mb-4 p-2 rounded bg-[var(--tokyo-bg)] text-[var(--tokyo-fg)] border border-[var(--tokyo-border)]\"\n            />\n\n            <div className=\"mb-4\">\n              <label className=\"block text-sm text-[var(--tokyo-purple)] mb-1\">Date</label>\n              <input\n                type=\"date\"\n                value={newEvent.start ? format(newEvent.start, 'yyyy-MM-dd') : ''}\n                onChange={(e) => {\n                  const date = new Date(e.target.value);\n                  const start = newEvent.start ? new Date(newEvent.start) : new Date();\n                  const end = newEvent.end ? new Date(newEvent.end) : new Date(start.getTime() + 60 * 60 * 1000);\n\n                  start.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n                  end.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n\n                  setNewEvent(prev => ({\n                    ...prev,\n                    start,\n                    end\n                  }));\n                }}\n                className=\"w-full p-2 rounded bg-[var(--tokyo-bg)] text-[var(--tokyo-fg)] border border-[var(--tokyo-border)]\"\n              />\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-4 mb-4\">\n              <div>\n                <label className=\"block text-sm text-[var(--tokyo-purple)] mb-1\">Start Time</label>\n                <input\n                  type=\"time\"\n                  value={newEvent.start ? format(newEvent.start, 'HH:mm') : ''}\n                  onKeyDown={(e) => {\n                    // Allow backspace and delete\n                    if (e.key === 'Backspace' || e.key === 'Delete') {\n                      e.preventDefault();\n                      const input = e.target as HTMLInputElement;\n                      input.value = '';\n                      setNewEvent(prev => ({\n                        ...prev,\n                        start: prev.start // Keep the existing date\n                      }));\n                    }\n                  }}\n                  onChange={(e) => {\n                    if (!e.target.value) return; // Skip if empty\n                    try {\n                      const [hours, minutes] = e.target.value.split(':').map(Number);\n                      const start = new Date(newEvent.start || new Date());\n                      start.setHours(hours || 0, minutes || 0);\n\n                      // If end time is before new start time, adjust it\n                      let end = new Date(newEvent.end || start.getTime() + 60 * 60 * 1000);\n                      if (end <= start) {\n                        end = new Date(start.getTime() + 60 * 60 * 1000);\n                      }\n\n                      setNewEvent(prev => ({\n                        ...prev,\n                        start,\n                        end\n                      }));\n                    } catch (error) {\n                      console.log('Invalid time format');\n                    }\n                  }}\n                  className=\"w-full p-2 rounded bg-[var(--tokyo-bg)] text-[var(--tokyo-fg)] border border-[var(--tokyo-border)]\"\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm text-[var(--tokyo-purple)] mb-1\">End Time</label>\n                <input\n                  type=\"time\"\n                  value={newEvent.end ? format(newEvent.end, 'HH:mm') : ''}\n                  onKeyDown={(e) => {\n                    // Allow backspace and delete\n                    if (e.key === 'Backspace' || e.key === 'Delete') {\n                      e.preventDefault();\n                      const input = e.target as HTMLInputElement;\n                      input.value = '';\n                      setNewEvent(prev => ({\n                        ...prev,\n                        end: prev.end // Keep the existing date\n                      }));\n                    }\n                  }}\n                  onChange={(e) => {\n                    if (!e.target.value) return; // Skip if empty\n                    try {\n                      const [hours, minutes] = e.target.value.split(':').map(Number);\n                      const end = new Date(newEvent.end || new Date());\n                      end.setHours(hours || 0, minutes || 0);\n\n                      // Only update if end time is after start time\n                      if (!newEvent.start || end > newEvent.start) {\n                        setNewEvent(prev => ({\n                          ...prev,\n                          end\n                        }));\n                      }\n                    } catch (error) {\n                      console.log('Invalid time format');\n                    }\n                  }}\n                  className=\"w-full p-2 rounded bg-[var(--tokyo-bg)] text-[var(--tokyo-fg)] border border-[var(--tokyo-border)]\"\n                />\n              </div>\n            </div>\n\n            <textarea\n              placeholder=\"Description (optional)\"\n              value={newEvent.description}\n              onChange={(e) => setNewEvent(prev => ({ ...prev, description: e.target.value }))}\n              className=\"w-full mb-4 p-2 rounded bg-[var(--tokyo-bg)] text-[var(--tokyo-fg)] border border-[var(--tokyo-border)]\"\n              rows={3}\n            />\n            <div className=\"flex gap-2 justify-end\">\n              <button\n                onClick={handleAddEvent}\n                className=\"px-4 py-2 bg-[var(--tokyo-green)] text-[var(--tokyo-bg)] rounded hover:bg-[var(--tokyo-green)]/90\"\n              >\n                Save\n              </button>\n              <button\n                onClick={(e) => {\n                  e.stopPropagation();\n                  setIsAddingEvent(false);\n                }}\n                className=\"px-4 py-2 bg-[var(--tokyo-red)] text-[var(--tokyo-bg)] rounded hover:bg-[var(--tokyo-red)]/90\"\n              >\n                Cancel\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <ChatButton onClick={() => setIsChatOpen(!isChatOpen)} isOpen={isChatOpen} />\n      <ChatWidget\n        isOpen={isChatOpen}\n        events={events}\n        onEventsChange={fetchEvents}\n      />\n    </main>\n  );\n}\n\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2850, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}